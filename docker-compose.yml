services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka_broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092, CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 2
    ports:
      - "9092:9092"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - node.name=elasticsearch
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m # Allocate memory
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data # Persist data

  catalog_db_server:
    image: postgres:18.0
    restart: always
    ports:
      - "5432:5432"
    deploy:
      mode: "replicated"
      replicas: 1
    environment:
      POSTGRES_USER: catalog_db
      POSTGRES_PASSWORD: catalog_db_password
      POSTGRES_DB: catalog_service
    volumes:
      - "catalog_db_server:/var/lib/postgresql/data"
  order_db_server:
    image: postgres:18.0
    restart: always
    ports:
      - "5433:5432"
    deploy:
      mode: "replicated"
      replicas: 1
    environment:
      POSTGRES_USER: order_db
      POSTGRES_PASSWORD: order_db_password
      POSTGRES_DB: order_service
    volumes:
      - "order_db_server:/var/lib/postgresql/data"
  user_db_server:
    image: postgres:18.0
    restart: always
    ports:
      - "5442:5432"
    deploy:
      mode: "replicated"
      replicas: 1
    environment:
      POSTGRES_USER: user_db
      POSTGRES_PASSWORD: user_db_password
      POSTGRES_DB: user_service
    volumes:
      - "user_db_server:/var/lib/postgresql/data"

volumes:
  elasticsearch_data:
  catalog_db_server:
  order_db_server:
  user_db_server: